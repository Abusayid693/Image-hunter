{"version":3,"sources":["Components/Top-division/f.jpg","Components/Search Bar/search-bar.jsx","Components/Loader/loader.jsx","Components/Top-division/Top-division.jsx","Components/Images/image.jsx","App.js","index.js"],"names":["client","createClient","style1","position","color","style2","width","top","left","myButtonStyle","ImageContext","React","createContext","images","setImages","LoadingContext","loading","setLoading","Bar","props","useState","value","setValue","numOfImages","num","setNum","style","setStyle","barHeight","setBarHeight","buttonStyle","setButtonStyle","useContext","padding","useEffect","handleClick","handleEnterPress","window","addEventListener","listenScrollEvent","continueRender","e","scrollY","query","console","log","photos","search","per_page","then","document","which","preventDefault","className","inputBoxHeight","inputBoxFontSize","inputBoxBorderColor","placeholder","data","key","onSelect","record","onFocus","onChange","fuseConfigs","threshold","onClick","Object","assign","height","useStyles","makeStyles","theme","root","marginTop","spacing","CircularIndeterminate","classes","LinearProgress","backgroundColor","zIndex","transition","MySearchBar","setColor","display","setDisplay","src","searchBarBG","ImageRender","like","setLike","setHeight","SetImageBlockHeight","i","medium","alert","large","App","setnumOfImages","margin","setMargin","LoadingContextValue","ImageContextValue","onscroll","Provider","map","Button","variant","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b022aa9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/f.5731034b.jpg\";","import React, { useContext, useState, useEffect } from \"react\";\nimport ReactSearchBox from \"react-search-box\";\nimport { createClient } from \"pexels\";\nimport \"./bar.css\";\n\nconst client = createClient(\n  \"563492ad6f917000010000011ffb610fd92b41f28bd21dd826ae5947\"\n);\n\nconst style1 = {\n  position: \"absolute\",\n  color: \"black\",\n};\n\n/* these */\nconst style2 = {\n  position: \"absolute\",\n  width: \"60%\",\n  top: \"14%\",\n  left: \"8%\",\n  color: \"black\",\n};\n\nconst myButtonStyle = { \"backgroundColor\": \"black\", \"color\": \"white\" };\n\n// CONTEXT API\nconst ImageContext = React.createContext({\n  images: [],\n  setImages: () => {},\n});\n\nconst LoadingContext = React.createContext({\n  loading: false,\n  setLoading: () => {},\n});\n\nexport default function Bar(props) {\n  const [value, setValue] = useState(\"boy\");\n  const [num, setNum] = useState(props.numOfImages);\n  const [style, setStyle] = useState(style1);\n  const [barHeight, setBarHeight] = useState(\"3.3rem\");\n  const [buttonStyle,setButtonStyle]=useState()\n\n  const { padding, setImages } = useContext(ImageContext);\n  const { loading, setLoading } = useContext(LoadingContext);\n\n  // Filling the components initially with random images\n  useEffect(() => {\n    handleClick();\n    handleEnterPress();\n    window.addEventListener(\"scroll\", listenScrollEvent);\n  }, []);\n\n  useEffect(() => continueRender(props.numOfImages), [props.numOfImages]);\n\n  const listenScrollEvent = (e) => {\n    if (window.scrollY >= 500) {\n      setStyle(style2);\n      setBarHeight(\"3rem\");\n      setButtonStyle(myButtonStyle)\n    } else {\n      setStyle(style1);\n      setBarHeight(\"3.3rem\");\n      setButtonStyle()\n    }\n  };\n\n  const continueRender = (num) => {\n    setNum(num + 9);\n    handleClick();\n  };\n\n  // Get image data from pixel apis\n  const handleClick = () => {\n    setLoading(\"rgb(245, 241, 241)\");\n    const query = value;\n    console.log(query);\n    client.photos.search({ query, per_page: num }).then((photos) => {\n      setImages(photos.photos);\n      console.log(photos.photos);\n      setLoading(false);\n    });\n  };\n\n  // Image search on enter press\n  const handleEnterPress = () => {\n    document.addEventListener(\"keypress\", handlePress);\n    function handlePress(e) {\n      if (e.which === 13) {\n        handleClick();\n        e.preventDefault();\n      }\n    }\n  };\n\n  // Mostly searched topics can be put here\n  const data = [\n    {\n      key: \"Car\",\n      value: \"Car\",\n    },\n    {\n      key: \"Lion\",\n      value: \"Lion\",\n    },\n    {\n      key: \"Harry potter\",\n      value: \"Harry potter\",\n    },\n    {\n      key: \"Avengers\",\n      value: \"Avengers\",\n    },\n    {\n      key: \"Bike\",\n      value: \"Bike\",\n    },\n  ];\n\n  return (\n    <div className=\"my-bar\" style={style}>\n      <div className=\"box\">\n        <ReactSearchBox\n          inputBoxHeight={barHeight}\n          className=\"box-t\"\n          inputBoxFontSize=\"1.2rem\"\n          inputBoxBorderColor=\"black\"\n          placeholder=\"Search for images\"\n          data={data}\n          onSelect={(record) => console.log(record)}\n          onFocus={() => {\n            console.log(\"This function is called when is focussed\");\n          }}\n          onChange={(e) => setValue(e)}\n          fuseConfigs={{\n            threshold: 0.05,\n          }}\n          value={value}\n        />\n      </div>\n      <button onClick={handleClick} style={Object.assign({ height: barHeight }, buttonStyle)} >\n        <i className=\"fa-2x fas fa-search\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport { Bar, ImageContext, LoadingContext };\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport searchBarBG from \"./f.jpg\";\nimport { Bar } from \"../Search Bar/search-bar\";\nimport CircularIndeterminate from \"../Loader/loader\";\n\n/* these */\nconst style1 = {\n  backgroundColor: \"white\",\n  height: \"4rem\",\n  width: \"100%\",\n  position: \"fixed\",\n  color: \"white\",\n  zIndex: \"100\",\n  top: \"0\",\n  transition: \"0s\",\n};\n\nfunction MySearchBar(props) {\n  const [color, setColor] = useState();\n  const [display, setDisplay] = useState();\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", listenScrollEvent);\n  }, []);\n\n  const listenScrollEvent = (e) => {\n    if (window.scrollY >= 500) {\n      setColor(style1);\n      setDisplay(\"none\");\n    } else {\n      setColor();\n      setDisplay();\n    }\n  };\n  // style={{ background: color}}\n\n  return (\n    <div className=\"top-div\" style={color}>\n      <div className=\"content\" style={{ display: display }}>\n        <h1>Search from 1000+ images</h1>\n\n        <p>Image are loaded with pixel api</p>\n      </div>\n      <Bar numOfImages={props.numOfImages} />\n      <div className=\"position-bar\">\n        {props.loading && <CircularIndeterminate />}\n      </div>\n      <img src={searchBarBG} style={{ display: display }} />\n    </div>\n  );\n}\n\nexport { MySearchBar };\n","import React, { useState, useEffect } from \"react\";\nimport \"./images.css\";\n\nexport default function ImageRender(props) {\n  const [color, setColor] = useState(\"rgb(185, 185, 185)\");\n  const [like, setLike] = useState(false);\n  const [height, setHeight] = useState(\"300px\");\n\n  useEffect(() => {\n    setHeight(SetImageBlockHeight(props.data.height));\n  }, []);\n\n  // Normalizing image height for better user experience\n  const SetImageBlockHeight = (i) => {\n    const a = i - 200,\n      b = 10000 - 200,\n      c = a / b,\n      d = 300;\n\n    return c * d + 300 + \"px\";\n  };\n\n  const handleLikeButton = () => {\n    if (like) {\n      setColor(\"rgb(185, 185, 185)\");\n      setLike(false);\n    } else {\n      setColor(\"rgb(238, 28, 109)\");\n      setLike(true);\n    }\n  };\n\n  const handleDownloadButton = () => {\n    alert(props.data.src.large);\n  };\n\n  return (\n    <div\n      className=\"image-block\"\n      style={{ backgroundColor: props.loading, height: height }}\n    >\n      <img src={props.data.src.medium} />\n      <button\n        className=\"btn1\"\n        style={{ color: color }}\n        onClick={handleLikeButton}\n      >\n        <i className=\"fas fa-2x fa-heart\"></i>\n      </button>\n      <button\n        className=\"btn2\"\n        style={{ color: \"black\" }}\n        onClick={handleDownloadButton}\n      >\n        <i className=\"fas fa-2x fa-download\"></i>\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { MySearchBar } from \"./Components/Top-division/Top-division\";\nimport {\n  ImageContext,\n  LoadingContext,\n} from \"./Components/Search Bar/search-bar\";\nimport ImageRender from \"./Components/Images/image\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./app.css\";\n\nfunction App() {\n  const [images, setImages] = useState([\n    {\n      src: {\n        medium:\n          \"https://images.pexels.com/photos/4473405/pexels-photo-4473405.jpeg\",\n      },\n    },\n    {\n      src: {\n        medium:\n          \"https://images.pexels.com/photos/4473405/pexels-photo-4473405.jpeg\",\n      },\n    },\n    {\n      src: {\n        medium:\n          \"https://images.pexels.com/photos/4473405/pexels-photo-4473405.jpeg\",\n      },\n    },\n  ]);\n  const [loading, setLoading] = useState(false);\n  const [numOfImages, setnumOfImages] = useState(12);\n  const [margin, setMargin] = useState(\"0\");\n\n  const LoadingContextValue = { loading, setLoading };\n  const ImageContextValue = { images, setImages };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", listenScrollEvent);\n  }, []);\n\n  const listenScrollEvent = (e) => {\n    if (window.scrollY >= 500) setMargin(\"45vh\");\n    else setMargin(\"0\");\n  };\n\n  const getMoreImages = () => {\n    setnumOfImages(numOfImages + 3);\n  };\n\n  return (\n    <div className=\"App\" onscroll=\"scrolled(this)\">\n      <LoadingContext.Provider value={LoadingContextValue}>\n        <ImageContext.Provider value={ImageContextValue}>\n          <MySearchBar loading={loading} numOfImages={numOfImages} />\n          <div className=\"images\"  style={{ marginTop:margin }}>\n            {images.map((data) => (\n              <ImageRender\n                data={data}\n                loading={loading}\n                numOfImages={numOfImages}\n              />\n            ))}\n          </div>\n          <Button\n            className=\"btn\"\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={getMoreImages}\n          >\n            more\n          </Button>\n        </ImageContext.Provider>\n      </LoadingContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}